version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 10
    commands:
      # Yarn installation
      - apt-get update -y && apt-get install -y make apt-transport-https
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - apt-get update -y && apt-get install -y yarn
      - bash -c "$(curl -fsSL https://raw.githubusercontent.com/thii/aws-codebuild-extras/master/install)"
      - yarn install
  build:
    commands:
      - echo "==> CODEBUILD_GIT_BRANCH = ${CODEBUILD_GIT_BRANCH} ${BRANCH_NAME} d $GIT_REPO"
      - echo "${CODEBUILD_BUILD_ARN}"
      - yarn build-production

  post_build:
    commands:
      # copy the contents of /build to S3
      - aws s3 sync --delete ./build "s3://${DeployBucket}/"

      - aws s3 cp --recursive --acl public-read --cache-control max-age=2592000,public ./build s3://${DeployBucket}/
      # set the cache-control headers for service-worker.js to prevent
      # browser caching
      - >
        aws s3 cp --acl public-read
        --cache-control="max-age=0, no-cache, no-store, must-revalidate"
        ./build/service-worker.js s3://${DeployBucket}/
      # set the cache-control headers for index.html to prevent
      # browser caching
      - >
        aws s3 cp --acl public-read
        --cache-control="max-age=0, no-cache, no-store, must-revalidate"
        ./build/index.html s3://${DeployBucket}/
      # invalidate the CloudFront cache for index.html and service-worker.js
      # to force CloudFront to update its edge locations with the new versions
      - >
        aws cloudfront create-invalidation --distribution-id ${Distribution}
        --paths /index.html /service-worker.js

artifacts:
  files:
    - '**/*'
  base-directory: build
